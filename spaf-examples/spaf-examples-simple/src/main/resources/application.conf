context {
	spark {
		master = "local[2]"
		batch-duration-seconds = 5
	}
	
	flink {
		local = true
		web-ui = true
		web-ui-port = 8081
	}
	
	storm {
		local = false
		debug = true
		workers = 3
	}
	
	samza {
		local = true
		map-to-stream-api = true
		start-args = [
			"--config", "job.config.loader.factory=org.apache.samza.config.loaders.PropertiesConfigLoaderFactory",
			"--config", "job.config.loader.properties.path=./src/main/resources/simple-app.samza.properties"
		]
	}
}

application {
	name = "Simple App"
}

//source {
//	type = kafka
//	zookeeper-connect = "zookeeper:2181"
//	bootstrap-servers = "kafka:9092"
//	key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
//	value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
//	topic = inputTopic
//}

source {
	type = rabbitmq
	host = localhost
	port = 5672
	username = guest
	password = guest
	queue = inputQueue
	id-deserializer = it.unibo.disi.spaf.api.connectors.rabbitmq.serialization.StringIdDeserializer
	body-deserializer = it.unibo.disi.spaf.api.connectors.rabbitmq.serialization.StringBodyDeserializer
}

//sink {
//	type = kafka
//	bootstrap-servers = "kafka:9092"
//	key-serializer = org.apache.kafka.common.serialization.StringSerializer
//	value-serializer = org.apache.kafka.common.serialization.StringSerializer
//	topic = outputTopic
//}

sink {
	type = rabbitmq
	host = localhost
	port = 5672
	username = guest
	password = guest
	queue = outputQueue
	id-serializer = it.unibo.disi.spaf.api.connectors.rabbitmq.serialization.StringIdSerializer
	body-serializer = it.unibo.disi.spaf.api.connectors.rabbitmq.serialization.StringBodySerializer
}
