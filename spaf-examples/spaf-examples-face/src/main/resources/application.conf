context {
	spark {
		// see: https://spark.apache.org/docs/latest/submitting-applications.html#master-urls
		master = "local[2]" // for development only
		//master = "spark://localhost:7077"
		//master = "spark://datalab00:7077"
		batch-duration-seconds = 1
	}
	
	flink {
		local = false
		//web-ui = true
		//web-ui-port = 10081
	}
	
	storm {
		//local = false
		debug = true
		workers = 20
		//start-args = [] // TODO: should this be valued by the app, passing main args?
	}
	
	samza {
		local = false
		start-args = [
			"--config", "job.config.loader.factory=org.apache.samza.config.loaders.PropertiesConfigLoaderFactory",
			"--config", "job.config.loader.properties.path=./src/main/resources/face-app.samza.properties"
		]
		map-to-stream-api = false
	}
}

application {
	name = "Face Detection"
	
	dataset-path = "/tmp/training-faces/"
}

//source {
//	type = kafka
//	zookeeper-connect = "zookeeper:2181"
//	bootstrap-servers = "kafka:9092"
//	key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
//	value-deserializer = org.apache.kafka.common.serialization.ByteArrayDeserializer
//	topic = FACE
//}

source {
	type = rabbitmq
	//host = rabbitmq // for cluster
	host = localhost
	port = 5672
    username = guest
	password = guest
	queue = FACE
	id-deserializer = it.unibo.disi.spaf.api.connectors.rabbitmq.serialization.StringIdDeserializer
	body-deserializer = it.unibo.disi.spaf.api.connectors.rabbitmq.serialization.ByteArrayBodyDeserializer
}

//sink {
//	type = kafka
//	bootstrap-servers = "kafka:9092"
//	key-serializer = org.apache.kafka.common.serialization.StringSerializer
//	value-serializer = org.apache.kafka.common.serialization.ByteArraySerializer
//	topic = DETECTED_FACES
//}

sink {
	type = rabbitmq
	//host = rabbitmq // for cluster
	host = localhost
	port = 5672
	username = guest
    password = guest
	queue = DETECTED_FACES
	id-serializer = it.unibo.disi.spaf.api.connectors.rabbitmq.serialization.StringIdSerializer
	body-serializer = it.unibo.disi.spaf.api.connectors.rabbitmq.serialization.ByteArrayBodySerializer
}